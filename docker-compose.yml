services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    ports:
      - "9092:9092"
    networks:
      - app-network

  spark-master:
    image: bitnami/spark:3.5.0
    container_name: spark
    command: bin/spark-class org.apache.spark.deploy.master.Master 
    hostname: spark-master
    environment:
      - SPARK_MODE=master
    ports:
      - "8080:8080"
      - "7077:7077"
    volumes:
      - E:/docker-projects/kafka-spark/output:/tmp/output
      - E:/docker-projects/kafka-spark/checkpoints:/tmp/checkpoint
      - E:/docker-projects/kafka-spark:/opt/bitnami/spark/app
    networks:
    - app-network
  spark-worker:
    image: bitnami/spark:3.5.0
    container_name: spark-worker
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=1g
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    volumes:
      - E:/docker-projects/kafka-spark/output:/tmp/output
      - E:/docker-projects/kafka-spark/checkpoints:/tmp/checkpoint
      - E:/docker-projects/kafka-spark:/opt/bitnami/spark/app
    networks:
    - app-network

  log-generator:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - kafka
    volumes:
      - E:/docker-projects/kafka-spark:/app
    networks:
      - app-network

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: weblogs
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  checkpoints:
  postgres-data: